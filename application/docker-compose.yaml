services:
    database:
        build:
            context: "."
            dockerfile: "_docker/database/database.dockerfile"
        environment:
            POSTGRES_USER: ${DATABASE_USER}
            POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
            POSTGRES_DB: ${DATABASE_NAME}
        ports:
            -   ${DATABASE_PORT}:${DATABASE_PORT}
        restart: "on-failure"
    core:
        build:
            context: "."
            dockerfile: "_docker/core/core.dockerfile"
        depends_on:
            -   database
        environment:
            DATABASE_HOST: database
            DATABASE_NAME: ${DATABASE_NAME}
            DATABASE_USER: ${DATABASE_USER}
            DATABASE_PASSWORD: ${DATABASE_PASSWORD}
            DATABASE_PORT: ${DATABASE_PORT}
        ports:
            -   "8080:8080"
        restart: "no"
        develop:
            watch:
                -   path: "core/src"
                    action: sync+restart
                    target: "/app/src"
    core-tester:
        build:
            context: "."
            dockerfile: "_docker/core-tester/core-tester.dockerfile"
        depends_on:
            -   core
        develop:
            watch:
                -   path: "core/src"
                    action: sync+restart
                    target: "/app/src"
    web-ui:
        build:
            context: "."
            dockerfile: "_docker/web-ui/web-ui.dockerfile"
        depends_on:
            -   core
        develop:
            watch:
                -   path: "web-ui/src"
                    action: sync+restart
                    target: "/app/src"
        ports:
            -   "8081:8080"
    web-ui-tester:
        build:
            context: "."
            dockerfile: "_docker/web-ui-tester/web-ui-tester.dockerfile"
        depends_on:
            -   web-ui
        develop:
            watch:
                -   path: "web-ui/src"
                    action: sync+restart
                    target: "/app/src"
